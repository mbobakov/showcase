swagger: "2.0"
consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
info:
  description: Antreeb platform API
  title: Antreeb API
  version: 1.0.0
basePath: "/api/v1"
tags:
  - name: "Organization"
    description: "Everything about your organization"

paths:
  /organization:
    get:
      tags:
        - "Organization"
      summary: "General info about organization"
      # parameters:
      responses:
        200:
          description: "Successful"
          schema:
            $ref: '#/definitions/Organization'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - "Organization"
      summary: "Create organization"
      description: "Warning: Only one organization is supported now"
      parameters:
        - in: "body"
          name: "body"
          description: "Organization object that needs to be updated/created"
          required: true
          schema:
            $ref: '#/definitions/Organization'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - "Organization"
      summary: "Update organization"
      description: "Warning: Only one organization is supported now"
      parameters:
        - in: "body"
          name: "body"
          description: "Organization object that needs to be updated/created"
          required: true
          schema:
            $ref: '#/definitions/Organization'
      responses:
        200:
          description: "Updated"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - "Organization"
      summary: "Delete organization"
      responses:
        200:
          description: "deleted"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /sites:
    get:
      tags:
        - "Organization"
      summary: "General info about sites"
      responses:
        200:
          description: "Successful"
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - "Organization"
      summary: "Create site"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Site'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /sites/{site_id}:
    get:
      tags:
        - "Organization"
      summary: "General info about site"
      parameters:
      - name: "site_id"
        in: "path"
        description: "ID of site that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: '#/definitions/Site'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - "Organization"
      summary: "Update site"
      parameters:
      - name: "site_id"
        in: "path"
        description: "ID of site that needs to be updated"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Site'
      responses:
        200:
          description: "Updated"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - "Organization"
      summary: "Delete site"
      parameters:
      - name: "site_id"
        in: "path"
        description: "ID of site that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "deleted"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
  /zones:
    get:
      tags:
        - "Organization"
      summary: "General info about zones"
      parameters:
        - name: site_id
          in: query
          type: string
          minLength: 1
      responses:
        200:
          description: "Successful"
          schema:
            type: array
            items:
              $ref: '#/definitions/Zone'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - "Organization"
      summary: "Create zone"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Zone'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /zones/{zone_id}:
    get:
      tags:
        - "Organization"
      summary: "General info about zone"
      parameters:
      - name: "zone_id"
        in: "path"
        description: "ID of zone that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: '#/definitions/Zone'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - "Organization"
      summary: "Create or update zone"
      parameters:
      - name: "zone_id"
        in: "path"
        description: "ID of zone that needs to be updated/created"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Zone'
      responses:
        200:
          description: "Updated"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - "Organization"
      summary: "Delete zone"
      parameters:
      - name: "zone_id"
        in: "path"
        description: "ID of zone that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "deleted"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /devices:
    get:
      tags:
        - "Devices"
      summary: "General info about devices"
      parameters:
        - name: site_id
          in: query
          type: string
          minLength: 1
        - name: zone_id
          in: query
          type: string
          minLength: 1
        - name: type
          in: query
          type: string
          enum:
            - machine
        - name: status
          in: query
          type: string
          enum:
            - active
            - inactive
            - unreachable
      responses:
        200:
          description: "Successful"
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - "Devices"
      summary: "Create device"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /devices/{device_id}:
    get:
      tags:
        - "Devices"
      summary: "General info about device"
      parameters:
      - name: "device_id"
        in: "path"
        description: "ID of device that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: '#/definitions/Device'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - "Devices"
      summary: "Update device"
      parameters:
      - name: "device_id"
        in: "path"
        description: "ID of device that needs to be updated/created"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        200:
          description: "Updated"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - "Devices"
      summary: "Delete device"
      parameters:
      - name: "device_id"
        in: "path"
        description: "ID of device that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "deleted"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /readings/enviroment/{func}:
    get:
      tags:
        - "Readings"
      summary: "Info about enviroment"
      parameters:
      - name: from
        description: Start time for the query
        in: "query"
        required: true
        type: string
        format: datetime
      - name: to
        description: End time for the query
        in: "query"
        required: true
        type: string
        format: datetime
      - name: frequency
        description: A frequency string is a sequence of decimal numbers, each with optional fraction and a unit suffix, such as 300ms, 1.5h or 2h45m. Valid time units are ns, us (or µs), ms, s, m, h
        in: "query"
        required: true
        type: string
      - name: "func"
        in: "path"
        description: "Function for the data aggregation"
        required: true
        type: "string"
        enum:
          # - min
          # - max
          # - sum
          - avg
          - raw
      - name: device_id
        in: "query"
        type: array
        items:
          type: string
    
      responses:
        200:
          description: "Successful"
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/EnvironmentReading'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /readings/stacklight/{func}:
    get:
      tags:
        - "Readings"
      summary: "Info about stacklight"
      parameters:
      - name: from
        description: Start time for the query
        in: "query"
        required: true
        type: string
        format: datetime
      - name: to
        description: End time for the query
        in: "query"
        required: true
        type: string
        format: datetime
      - name: frequency
        description: A frequency string is a sequence of decimal numbers, each with optional fraction and a unit suffix, such as 300ms, 1.5h or 2h45m. Valid time units are ns, us (or µs), ms, s, m, h
        in: "query"
        required: true
        type: string
      - name: "func"
        in: "path"
        description: "Function for the data aggregation"
        required: true
        type: "string"
        enum:
          # - min
          # - max
          # - sum
          - avg
          - raw
      - name: device_id
        in: "query"
        type: array
        items:
          type: string

      responses:
        200:
          description: "Successful"
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/StacklightReading'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
  
  /login:
    post:
      tags:
        - "Users"
      summary: "Authentification"
      security: []
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        200:
          description: "Authentificated"
          schema:
            properties:
              API-key:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
        
  /users:
    get:
      tags:
        - "Users"
      summary: "Info about users"
      parameters:
        - name: role
          in: "query"
          type: string
          enum:
            - admin
            - read-only
            - read-write
      responses:
        200:
          description: "Successful"
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - "Users"
      summary: "Create  user"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
            
  /users/{user_id}:
    get:
      tags:
        - "Users"
      summary: "General info about user"
      parameters:
        - name: "user_id"
          in: "path"
          description: "ID of user that needs to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: '#/definitions/User'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - "Users"
      summary: "Update user"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user that needs to be updated"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - "Users"
      summary: "Delete user"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "deleted"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
  
  /notifications:
    get:
      tags:
        - "Notifications"
      summary: "Info about notification configuration"
      parameters:
        - name: type
          in: "query"
          type: string
          enum:
            - sms
            - email
        - name: device_id
          in: "query"
          type: array
          items:
            type: string

      responses:
        200:
          description: "Successful"
          schema:
            type: object
            properties:
              device_id:
                type: string
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/definitions/Notification'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - "Notifications"
      summary: "Create notification"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Notification'
      responses:
        201:
          description: "Created"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

  /notification/{notification_id}:
    get:
      tags:
        - "Notifications"
      summary: "General info about notification"
      parameters:
        - name: "notification_id"
          in: "path"
          description: "ID of notification that needs to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: '#/definitions/Notification'
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - "Notifications"
      summary: "Update notification"
      parameters:
      - name: "notification_id"
        in: "path"
        description: "ID of notification that needs to be updated"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: '#/definitions/Notification'
      responses:
        200:
          description: "Updated"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - "Notifications"
      summary: "Delete notification"
      parameters:
      - name: "notification_id"
        in: "path"
        description: "ID of notification that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "deleted"
          schema:
            properties:
              id:
                type: string
        default:
          description: "Server error"
          schema:
            $ref: '#/definitions/Error'

# Global security (applies to all operations):
security:
  - APIKeyHeader: []

securityDefinitions:
   # X-API-Key: abcdef12345
   APIKeyHeader:
     type: apiKey
     in: header
     name: X-API-Key

definitions:
  Error:
    type: object
    properties:
      error:
        type: string
      request_id:
        type: string
  Organization:
    type: object
    required:
      - name
      - sites
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      logo_url:
        type: string
      description:
        type: string
      sites:
        type: array
        items:
          type: string
        minItems: 1

  Site:
    type: object
    required:
      - name
      - zones
    properties:
      id:
        type: string
      name:
        type: string
        minLength: 1
      description:
        type: string
      zones:
        type: array
        items:
          type: string
        minItems: 1

  Zone:
    type: object
    required:
      - name
      - site
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      site:
        type: string
        minLength: 1
      layout_url:
        type: string
        minLength: 1
      description:
        type: string
      devices:
        type: array
        items:
          type: string

  Device:
    type: object
    required:
      - name
      - zone
      - type
    properties:
      id:
        type: string
        minLength: 1
      zone:
        type: string
        minLength: 1
      type:
        type: string
        enum:
          - machine
      status:
        type: string
        enum:
          - active
          - inactive
          - unreachable
      description:
        type: string
      metadata:
        type: object
      notifications:
        type: array
        items:
          type: string
      severity:
        type: string
        enum:
          - OK
          - WARNING
          - CRITICAL
      escalation_level:
        type: number
        minimum: 0
        maximum: 3

  EnvironmentReading:
    type: object
    properties:
      temperature:
        type: array
        items:
          $ref: '#/definitions/Datapoint'
      humidity:
        type: array
        items:
          $ref: '#/definitions/Datapoint'
      pressure:
        type: array
        items:
          $ref: '#/definitions/Datapoint'

  StacklightReading:
    type: object
    properties:
      green:
        type: array
        items:
          $ref: '#/definitions/Datapoint'
      yellow:
        type: array
        items:
          $ref: '#/definitions/Datapoint'
      red:
        type: array
        items:
          $ref: '#/definitions/Datapoint'

  User:
    type: object
    required:
      - name
      - status
      - role
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: string
        enum:
          - active
          - disabled
      contacts:
        type: object
        properties:
          type:
            type: string
            enum:
              - sms
              - email
          destination:
            type: string
      role:
        type: string
        enum:
          - admin
          - read-only
          - read-write
  Login:
    type: object
    required:
      - login
      - password
      - role
    properties:
      login:
        type: string
      password:
        type: string
      role:
        type: string
        enum:
          - admin
          - read-only
          - read-write

  Notification:
    type: object
    required:
      - level
      - destination
      - duration
    properties:
      id:
        type: string
      severity:
        type: string
        enum:
          - OK
          - WARNING
          - CRITICAL
      duration:
        type: string # go time.ParseDuration compatible
      escalation_level:
        type: integer
        minimum: 1
        maximum: 3
      destination:
        type: object
        properties:
          channel:
            type: string
            enum:
              - sms
              - email
          recipients:
            type: array
            items:
              type: string

  Datapoint:
    type: object
    required:
      - timestamp_utc
      - value
    properties:
      time:
        type: string
        format: datetime
      value:
        type: number
        format: float64
        readOnly: false
